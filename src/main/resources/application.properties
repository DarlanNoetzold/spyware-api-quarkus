# datasource configuration
quarkus.datasource.db-kind = postgresql
quarkus.datasource.username = postgres
quarkus.datasource.password = postgres
quarkus.datasource.jdbc.url = jdbc:postgresql://localhost:5432/spywareAPIquarkus
# drop and create the database at startup (use `update` to only update the schema) drop-and-create
quarkus.hibernate-orm.database.generation=update


#docker run --name keycloak -e KEYCLOAK_ADMIN=admin -e KEYCLOAK_ADMIN_PASSWORD=admin -p 8180:8080 quay.io/keycloak/keycloak:17.0.0 start-dev
quarkus.oidc.auth-server-url=http://localhost:8180/realms/quarkus
quarkus.oidc.client-id=backend-service
quarkus.oidc.credentials.secret=secret


# Configure the outgoing RabbitMQ exchange `alerts`
mp.messaging.outgoing.quotes.connector=smallrye-rabbitmq
mp.messaging.outgoing.quotes.exchange.name=alerts
# Configure the incoming RabbitMQ queue `alerts`
mp.messaging.incoming.requests.connector=smallrye-rabbitmq
mp.messaging.incoming.requests.queue.name=alerts
mp.messaging.incoming.requests.exchange.name=alerts


quarkus.cache.redis.image.value-type=tech.noetzold.model.Image
quarkus.cache.redis.listimage.value-type=java.util.List
quarkus.cache.redis.alert.value-type=tech.noetzold.model.Alert
quarkus.cache.redis.listalert.value-type=java.util.List

quarkus.http.port=9000


#General Log
quarkus.log.level=INFO
quarkus.log.category."org.hibernate".level=INFO
quarkus.log.category."org.gs".level=DEBUG

#Console Log
quarkus.log.console.enable=true
quarkus.log.console.color=true

quarkus.log.console.json=true
quarkus.log.console.json.pretty-print=true


quarkus.banner.enabled=true

#File Log
#quarkus.log.file.enable=true
#quarkus.log.file.path=logs/quarkus.log
#quarkus.log.file.rotation.file-suffix=d-HH:mm-

#HTTP Log
quarkus.http.access-log.enabled=true